Classes e Construtores:

Inicializadores:

   
    


    #Inicializador de Campo e de Lista Combinados:
    Crie uma classe Retangulo com atributos largura e altura. Use um inicializador de campo para garantir que esses valores sejam positivos e um inicializador de lista para calcular a área.

    #Inicializador de Campo com Lógica Complexa:
    Implemente uma classe Data que representa uma data com atributos dia, mês e ano. Use um inicializador de campo para garantir que a data seja válida.

    #Inicializador com Exceção:
    Crie uma classe Estoque que representa a quantidade de um item em estoque. Implemente um inicializador que lance uma exceção se a quantidade fornecida for negativa.

    #Inicializador Redirecionado:
    Defina uma classe Círculo com atributo raio. Implemente um construtor redirecionado que cria um círculo com raio 1.0 quando nenhum raio é fornecido.

Herança Simples:

    Herança Básica:
    Crie uma classe base chamada Animal com um atributo nome. Em seguida, crie uma classe derivada chamada Cachorro que herda de Animal e adicione um atributo raca. Crie um objeto Cachorro e exiba o nome e a raça.

    Herança com Sobrescrita:
    Modifique a classe Animal para incluir um método fazerSom(). Sobrescreva esse método na classe Cachorro para que ele imprima "Latir" quando chamado. Crie um objeto Cachorro e chame o método fazerSom().

    Herança com Construtores:
    Crie uma classe base Veiculo com atributos marca e ano. Em seguida, crie uma classe derivada Carro que herda de Veiculo e adicione um atributo modelo. Implemente um construtor na classe Carro que aceita marca, ano e modelo. Crie um objeto Carro e exiba suas características.

Herança com Polimorfismo:

    Polimorfismo com Herança:
    Crie uma classe base Forma com um método calcularArea(). Em seguida, crie classes derivadas como Circulo e Retangulo que implementem o método calcularArea(). Crie uma lista de objetos Forma, incluindo objetos das classes derivadas. Itere pela lista e chame o método calcularArea() para cada objeto, demonstrando o polimorfismo.

    Herança com Classe Abstrata:
    Defina uma classe abstrata chamada Fruta com um método abstrato sabor(). Crie classes derivadas como Banana e Morango que implementam o método sabor(). Crie objetos dessas classes e chame o método sabor().